{# 
    This file is part of the CloudStack Client Generator.
    
    (c) Quentin Plepl√© <quentin.pleple@gmail.com>
    (c) Aaron Hurt <ahurt@anbcs.com>
    
    For the full copyright and license information, please view the LICENSE
    file that was distributed with this source code.
#}
{% autoescape false %}
    /**
     * {% filter wordwrap(80, "\n     * ", true) %}{{ method.description | raw }}{{ "\n" }}{% endfilter %}
     *
{# document all required paramaters #}
{% for param in method.params %}
{% if param.required == true %}
     * @param string ${{ param.name }} {% filter wordwrap(80, "\n     * ", true) %}{{ param.description | raw }}{{ "\n" }}{% endfilter %}
{% endif %}
{% endfor %}
{# end required paramaters #}
{% if method.optional > 0 %}
     * @param array  $optArgs {
{# document all optional paramaters #}
{% for param in method.params %}
{% if param.required != true %}
     *     @type string ${{ param.name }} {% filter wordwrap(80, "\n     *     ", true) %}{{ param.description | raw }}{{ "\n" }}{% endfilter %}
{% endif %}
{% endfor %}
{# end optional arguments #}
     * }
{% endif %}{% if method.required > 0 %}
     * @throws \CloudStackClientException
{% endif %}
     * @return \stdClass
     */
    public function {{ method.name }}({# only define required paramaters in function #}
{% set count = 1 %}
{% for param in method.params %}
{% if param.required == true %}${{ param.name }}{% if count < method.required %}{{ ", " }}{% endif %}
{% set count = count + 1 %}
{% endif %}
{% endfor %}
{# end required #}
{# append optional arguments if needed #}
{% if method.optional > 0 %}{% if method.required > 0 %}, {% endif %}array $optArgs = []{% endif %}) {
{# generate required paramater checks #}
{% for param in method.params %}
{% if param.required == true %}
        if (empty(${{ param.name }})) {
            throw new CloudStackClientException(sprintf(MISSING_ARGUMENT_MSG, '{{ param.name }}'), MISSING_ARGUMENT);
        }
{% endif %}
{% endfor %}
{# end paramater checks #}
        return $this->request('{{ method.name }}'{% if method.optional == 0 and method.required == 0 %});{% else %},
{% if method.optional > 0 and method.required > 0 %}
    {# generate return array merge of required and optional paramaters #}
        [{% elseif method.required > 0 %}
    {# no merge ... just a simple array #}
        [{% elseif method.optional > 0 %}
    {# no merge ... no array ... only optional arguments here #}
        $optArgs{% endif %}
{% endif %}

{% set count = 1 %}
{% for param in method.params %}
{% if param.required == true %}
                '{{ param.name }}' => ${{ param.name }}{# determine line ending based on count #}
{% if count < method.required %}{{ ",\n" }}{% else %}{{ "\n" }}{% endif %}
{% set count = count + 1 %}
{% endif %}
{% endfor %}
{% if (method.optional > 0) and (method.required > 0) %}
{# generate return array merge of required and optional paramaters #}
            ] + $optArgs
        );
{% elseif method.required > 0 %}
{# no merge ... just close array #}
            ]
        );
{% elseif method.optional > 0 %}
        );
{% endif %}
    }
{% endautoescape %}
